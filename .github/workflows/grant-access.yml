on:
  issue_comment:                                     
    types: [created, edited]

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      - name: Print comment
        run: |
          echo "${{ github.event.comment.body }}"
          
      - name: Check issue comment author
        uses: actions/github-script@v6
        id: authorized-author
        with:
          github-token: ${{ secrets.ORG_TOKEN }}
          result-encoding: string
          script: |
            const teamSlug = "admin"; 
            const response = await github.rest.teams.listMembersInOrg({
              org: context.repo.owner,
              team_slug: teamSlug,
              per_page: 20
            });
            const members = response.data.map(member => member.login);
            const author = `${{ github.actor }}`
            console.log(members)
            if (members.includes(author)) {
              console.log(`${author} is in the list!`);
            } else {
              console.log(`${author} is not in the list.`);
            }
            return members.includes(author)
            
      - name: Invite member
        uses: actions/github-script@v6
        if: ${{ contains(github.event.comment.body, 'approved') && steps.authorized-author.outputs.result == 'true' }}
        with:
          github-token: ${{ secrets.ORG_TOKEN }}
          script: |
              console.log(context.issue.number);
              const commentBody = `${{ github.event.comment.body }}`
              console.log('Comment body:', commentBody);
              
              const { data: issue } = await github.rest.issues.get({ 
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number });
              console.log('Issue body:', issue.body);
              const issueBody = issue.body;
              
              const lines = issueBody.split('\n');

              // Regular expression to match lines that contain "user:"
              const regex = /user:(.*)/;

              // Loop through each line and extract the string after "user:"
              for (const line of lines) {
                const match = line.match(regex);
                if (match) {
                  const userString = match[1].trim(); // trim() removes any leading or trailing white space
                  github.rest.orgs.setMembershipForUser({
                      org: 'eberlemanuelorg',
                      role: 'member',
                      username: userString
                    });

                    github.rest.teams.addOrUpdateMembershipForUserInOrg({
                      org: 'eberlemanuelorg',
                      team_slug: 'user',
                      username: userString
                    });
                }
              }
